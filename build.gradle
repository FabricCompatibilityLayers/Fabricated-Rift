plugins {
	id 'java'
	id 'xyz.wagyourtail.unimined' version "0.4.10-SNAPSHOT"
	id 'maven-publish'
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	mavenCentral()

	maven {
		name = 'Fabric'
		url = "https://maven.fabricmc.net/"
	}
	maven {
		name = "Legacy Fabric"
		url = "https://maven.legacyfabric.net/"
	}
	// WagYourTail Mavens
	maven { url "https://maven.wagyourtail.xyz/releases" }
	maven { url "https://maven.wagyourtail.xyz/snapshots" }

	maven {
		url "https://maven.minecraftforge.net/"
		metadataSources {
			artifact()
			mavenPom()
		}
	}

	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}
}

sourceSets {
	main
	debug {
		compileClasspath += main.compileClasspath
	}
}

unimined {
	useGlobalCache = false
}

minecraft {
	legacyFabric {
		accessWidener = file("src/main/resources/fabricated-rift.accesswidener")
	}

	mcRemapper.tinyRemapperConf = {
		// most mcp mappings (except older format) dont include field desc
		ignoreFieldDesc(true)
		// this also fixes some issues with them, as it tells tiny remapper to try harder to resolve conflicts
		ignoreConflicts(true)
	}
}

dependencies {
	minecraft "net.minecraft:minecraft:${project.minecraft_version}"

	mappings "de.oceanlabs.mcp:mcp_config:${project.minecraft_version}@zip"
	mappings "de.oceanlabs.mcp:mcp_${project.mcp_channel}:${project.mcp_version}-${project.minecraft_version}@zip"

	mappings "net.legacyfabric.v2:intermediary:${project.minecraft_version}:v2"
//mappings "net.legacyfabric.v2:yarn:${project.yarn_mappings}:v2"

	fabric "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation("maven.modrinth:mod-remapping-api:${project.mod_remapping_api}")
}

base {
	archivesName = project.archives_base_name
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	if (JavaVersion.current().isJava9Compatible()) it.options.release = 8

	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}" }
	}
	from("./libs") {
		into("libs")
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}

// minecraft {
//     version = '1.13'
//     mappings = 'snapshot_20180908'
//     runDir = 'run'
//     tweakClass = 'org.dimdev.riftloader.launch.RiftLoaderClientTweaker'
//     makeObfSourceJar = false

// }
