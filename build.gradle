plugins {
	id 'java'
	id 'xyz.wagyourtail.unimined' version "1.2.4-SNAPSHOT"
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}

	maven {
		name = "Jitpack"
		url 'https://jitpack.io/'
	}
}

unimined.minecraft {
	version project.minecraft_version

	legacyFabric {
		loader project.loader_version
		accessWidener = file("src/main/resources/fabricated-rift.accesswidener")
	}

	mappings {
		searge()
		mcp(project.mcp_channel, "${project.mcp_version}-${project.minecraft_version}")
	}
}

dependencies {
	modImplementation("maven.modrinth:mod-remapping-api:${project.mod_remapping_api}")
	modImplementation("maven.modrinth:spasm:0.2")
	implementation("com.github.thecatcore.CursedMixinExtensions:fabric:1.0.0")
}

processResources {
	inputs.property "version", project.version
	inputs.property "mc_version", project.minecraft_version
	inputs.property "mrapi_version", project.mod_remapping_api

	filesMatching("fabric.mod.json") {
		expand "version": project.version,
				"mc_version": rootProject.minecraft_version,
				"mrapi_version": project.mod_remapping_api
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	if (JavaVersion.current().isJava9Compatible()) it.options.release = 8

	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8

	options.deprecation = true
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}" }
	}
	from("./libs") {
		into("libs")
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}

// minecraft {
//     version = '1.13.1'
//    mappings = 'snapshot_20181106'
//    runDir = 'run'
//    tweakClass = 'org.dimdev.riftloader.launch.RiftLoaderClientTweaker'
//    makeObfSourceJar = false

// }
